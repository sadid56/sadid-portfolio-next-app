@import "tailwindcss";

@theme inline {
  --font-montserrat: var(--font-montserrat);
  --font-poppins: var(--font-poppins);

  --color-primary: #03e9f4;
  --color-secondary: #ffbe7b;
  --color-mainBgColor: #010610;

  --animation-shimmer: shimmer 5s linear infinite;

  /* Keyframe variables aren't usually theme-driven; define them outside theme */
}

/* Define variables for animations and keyframes */
@layer base {
  @keyframes shimmer {
    from {
      background-position: 0 0;
    }
    to {
      background-position: -200% 0;
    }
  }
}
/* custom style  */

/* Hide scrollbar in Firefox */
* {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE 10+ */
}

*::-webkit-scrollbar {
  display: none; /* Chrome, Safari */
}
::-webkit-scrollbar {
  width: 8px;
  display: none;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(transparent, #01f2ff);
  border-radius: 8px;
}
::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(transparent, white);
}

@keyframes mouseWheel {
  0% {
    opacity: 0;
    transform: translateY(0);
  }
  30% {
    opacity: 1;
    transform: translateY(4px);
  }
  60% {
    opacity: 1;
    transform: translateY(8px);
  }
  100% {
    opacity: 0;
    transform: translateY(8px);
  }
}

.animate-mouseWheel {
  animation: mouseWheel 1.5s ease-in-out infinite;
}


@keyframes borderShine {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

.group:hover .animate-borderShine {
  animation: borderShine 2s linear infinite;
}

.animate-borderShine {
  animation: none;
}



.hamburger {
  cursor: pointer;
}

.hamburger input {
  display: none;
}

.hamburger svg {
  /* The size of the SVG defines the overall size */
  height: 3em;
  /* Define the transition for transforming the SVG */
  transition: transform 1200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
  fill: none;
  stroke: white;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 3;
  /* Define the transition for transforming the Stroke */
  transition:
    stroke-dasharray 1200ms cubic-bezier(0.4, 0, 0.2, 1),
    stroke-dashoffset 1200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line-top-bottom {
  stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
  transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
  stroke-dasharray: 20 300;
  stroke-dashoffset: -32.42;
}
